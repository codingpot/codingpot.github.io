<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>게시글 on 코딩냄비 부글부글</title>
    <link>https://codingpot.github.io/cicd/</link>
    <description>Recent content in 게시글 on 코딩냄비 부글부글</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://codingpot.github.io/cicd/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Okteto 파이프라인(빌드)</title>
      <link>https://codingpot.github.io/cicd/okteto-pipeline-build/</link>
      <pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://codingpot.github.io/cicd/okteto-pipeline-build/</guid>
      <description>현재 코딩냄비 프로젝트 중 pr12er 에서 배포하는 방식을 그대로 분석한 포스트다. pr12er 프로젝트에서는 쿠버네티스 클러스터의 네임스페이스를 임대해주는 Okteto 라는 서비스를 활용해 구현된 서비스를 배포한다. 살펴봐야 할 내용이 많으므로, 하나씩 분석한다.
Okteto로 디플로이 하기위한 파이프라인 중 가장 먼저 살펴볼 것은 okteto build 명령어이다. pr12er에서는 루트 디렉터리의okteto-pipeline.yaml 파일 가장 첫 번째 라인에서 사용되며, 아래는 그 한 줄을 보여준다.
deploy - okteto build -t okteto.dev/이미지명:${OKTETO_GIT_COMMIT} -f ./server/deploy/Dockerfile server okteto build CLI의 공식문서에 따르면, 이 명령어는 Dockerfile로부터 이미지를 빌드하고, 지정된 registry에 빌드된 이미지를 push 하는 역할을 수행한다.</description>
    </item>
    
  </channel>
</rss>
